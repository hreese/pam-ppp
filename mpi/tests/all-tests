#!/bin/sh

# all-tests
#
# Simple unit tests for the MPI library.  This script actually just
# runs each of the mpi-test unit tests, and saves any errors into a
# file.  It also performs a pragmatic test using the "pi" program
# (from the utils subdirectory) to compute the first 2000 digits of pi
# using Machin's formula, and compare them to the known-correct set of
# digits stored in pi2k.txt
#

ECHO='/bin/echo -e'

$ECHO " "
$ECHO "** Running unit tests for MPI library"
$ECHO " "

# Build the mpi-test program, which comprises all the unit tests for
# the MPI library...

$ECHO "Bringing mpi-test up to date ... "
if make mpi-test ; then
  :
else
  $ECHO " "
  $ECHO "Make failed to build mpi-test."
  $ECHO " "
  exit 1
fi

if [ ! -x ./mpi-test ] ; then
  $ECHO " "
  $ECHO "Cannot find 'mpi-test' program, testing cannot continue."
  $ECHO " "
  exit 1
fi

# Get the list of available test suites...
tests=`./mpi-test list | awk '{print $1}'`
errs=0

# Run each test suite and check the result code of mpi-test
touch test-errors.txt
for test in $tests ; do
  $ECHO "$test ... \c"
  if ./mpi-test $test >> test-errors.txt ; then
    $ECHO "passed"
  else
    $ECHO "FAILED"
    errs=1
  fi
done

# If any tests failed, we'll stop at this point
if [ "$errs" = "0" ] ; then
  $ECHO "All unit tests passed"
  rm -f test-errors.txt
else
  $ECHO "One or more tests failed (see 'test-errors' for details)"
  exit 1
fi

# Now try to build the 'pi' program, and see if it can compute the
# first thousand digits of pi correctly
$ECHO ""
$ECHO "** Running other tests"
$ECHO ""

$ECHO "Bringing 'pi' up to date ... "
if ( cd ../utils && make pi ) ; then
    :
else
    $ECHO ""
    $ECHO "Make failed to build the pi computing program."
    $ECHO ""
    exit 1
fi

if [ ! -x ../utils/pi ] ; then
    $ECHO ""
    $ECHO "Cannot find 'pi' program; testing cannot continue."
    $ECHO ""
    exit 1
fi

../utils/pi 2000 > /tmp/pi.tmp.$$
if cmp pi2k.txt /tmp/pi.tmp.$$ ; then
    $ECHO "Okay!  The pi test passes."
else
    $ECHO "Oops!  The pi test failed. :("
    exit 1
fi

rm -f /tmp/pi.tmp.$$

exit 0

# Here there be dragons
